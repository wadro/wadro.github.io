<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on WADRO</title>
    <link>https://wadro.github.io/post/</link>
    <description>Recent content in Posts on WADRO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 02 Aug 2021 14:19:54 +0900</lastBuildDate><atom:link href="https://wadro.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Chapter 3  Common Programming Concepts</title>
      <link>https://wadro.github.io/post/cs/rustlang/rust-book/chapter-3.-common-programming-concepts/</link>
      <pubDate>Mon, 02 Aug 2021 14:19:54 +0900</pubDate>
      
      <guid>https://wadro.github.io/post/cs/rustlang/rust-book/chapter-3.-common-programming-concepts/</guid>
      <description>변수 선언 기본적으로 rust 의 변수는 immutable 합니다. 즉, 변하지 않는 값이 되죠.
(c 나 여러 언어에서 const 키워드를 사용하는 것과 같습니다. 기본 변수 타입이 const 인 셈이죠.)
이걸 통해 안전성과 쉬운 병렬성을 달성할수가 있게됩니다.(왜 그런지는 배우면서 차차 알수 있겠죠. 저도 아직 모름&amp;hellip;)
물론, 변하는 값으로 설정하는 방법도 있습니다.
이제부터 왜 그렇게 설계했는지를 살펴봅시다.
먼저 변수를 선언하고나면, 그 이름을 가진 변수의 값을 바꿀수 없습니다.
한번 예시를 통해 살펴 볼게요.
fn main() { let x = 5; println!</description>
    </item>
    
    <item>
      <title>Hello, world! and Cargo</title>
      <link>https://wadro.github.io/post/cs/rustlang/rust-book/hello-world-and-cargo/</link>
      <pubDate>Mon, 02 Aug 2021 12:05:34 +0900</pubDate>
      
      <guid>https://wadro.github.io/post/cs/rustlang/rust-book/hello-world-and-cargo/</guid>
      <description>착한 반말 컨셉 Rust 튜토리얼  먼저 WSL2 설치 가이드 링크 설치 후 기초 예제 링크  terminal
$ mkdir ~/projects $ cd ~/projects $ mkdir hello_world $ cd hello_world  hello_world.rs fn main() { println!(&amp;quot;Hello, world!&amp;quot;); }  output $ rustc main.rs $ ./main Hello, world!  cargo 버젼 체크 $ cargo --version  새로운 프로젝트 생성 $ cargo new hello_cargo $ cd hello_cargo  cargo.toml 파일 구성 [package] name = &amp;quot;hello_cargo&amp;quot; version = &amp;quot;0.</description>
    </item>
    
    <item>
      <title>Introduction to Rust</title>
      <link>https://wadro.github.io/post/cs/rustlang/rust-book/introduction-to-rust/</link>
      <pubDate>Mon, 26 Jul 2021 13:55:43 +0900</pubDate>
      
      <guid>https://wadro.github.io/post/cs/rustlang/rust-book/introduction-to-rust/</guid>
      <description>본 글은 doc.rust-lang-org 의 튜토리얼 내용을 정리한 글입니다. rust lang 특징  Rust programming language is fundamentally about empowerment “systems-level” without taking on the customary risk of crashes or security holes, and without having to learn the fine points of a fickle toolchain. the language is designed to guide you naturally towards reliable code that is efficient in terms of speed and memory usage. introducing parallelism in Rust is a relatively low-risk operation: the compiler will catch the classical mistakes for you Rust isn’t limited to low-level systems programming - CLI apps, web servers, and many other kinds of code  rust lang 사용처  Rust is proving to be a productive tool for collaborating among large teams of developers with varying levels of systems programming knowledge.</description>
    </item>
    
    <item>
      <title>Heading</title>
      <link>https://wadro.github.io/post/heading/</link>
      <pubDate>Wed, 28 Apr 2021 07:00:19 +0900</pubDate>
      
      <guid>https://wadro.github.io/post/heading/</guid>
      <description>Introduction One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in his bed into a horrible vermin.
My Heading He lay on his armour-like back, and if he lifted his head a little he could see his brown belly, slightly domed and divided by arches into stiff sections. The bedding was hardly able to cover it and seemed ready to slide off any moment.
My Subheading A collection of textile samples lay spread out on the table - Samsa was a travelling salesman - and above it there hung a picture that he had recently cut out of an illustrated magazine and housed in a nice, gilded frame.</description>
    </item>
    
    <item>
      <title>Hugo Tutorials</title>
      <link>https://wadro.github.io/post/hugo/hugo-tutorials/</link>
      <pubDate>Wed, 28 Apr 2021 05:56:50 +0900</pubDate>
      
      <guid>https://wadro.github.io/post/hugo/hugo-tutorials/</guid>
      <description>hugo 블로그 만들기 (windows &amp;amp; cupper theme 기준)    choco install hugo -confirm (powershell 관리자로 실행 후)
  hugo new site (블로그 파일 모아 놓을 폴더 이름) e.g. hugo new site blog
  cd (블로그 파일 모아 놓을 폴더 이름) e.g. cd blog
  git init
이 부분은 각자 쓰고 싶은 테마를 찾아볼것.여기서 -&amp;gt; git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git
themes/ananke
  hugo new posts/(쓰고싶은이름).md
  터미널(powershell)에 hugo 엔터 누르면 markdown 으로 작성된 파일이 알아서 html,css,js 파일로 변환됨.</description>
    </item>
    
  </channel>
</rss>
